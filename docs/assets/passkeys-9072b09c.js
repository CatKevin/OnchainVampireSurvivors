import{a6 as b,b as p}from"./index-be9e3908.js";const V="/sdk/2022-08-12/embedded-wallet",u=e=>`thirdwebEwsWalletUserId-${e}`,P="walletToken",h=e=>`${P}-${e}`,y=e=>`passkey-credential-id-${e}`,O="a",g=(e,t)=>`${O}-${e}-${t}`,m=e=>`walletConnectSessions-${e}`,A=new Map;class w{constructor({clientId:t}){Object.defineProperty(this,"isSupported",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isSupported=typeof window<"u"&&!!window.localStorage,this.clientId=t}async getItem(t){return this.isSupported?window.localStorage.getItem(t):A.get(t)??null}async setItem(t,a){if(this.isSupported)return window.localStorage.setItem(t,a);A.set(t,a)}async removeItem(t){const a=await this.getItem(t);return this.isSupported&&a?(window.localStorage.removeItem(t),!0):!1}async getWalletConnectSessions(){return this.getItem(m(this.clientId))}async saveWalletConnectSessions(t){await this.setItem(m(this.clientId),t)}async savePasskeyCredentialId(t){await this.setItem(y(this.clientId),t)}async getPasskeyCredentialId(){return this.getItem(y(this.clientId))}async saveAuthCookie(t){await this.setItem(h(this.clientId),t)}async getAuthCookie(){return this.getItem(h(this.clientId))}async removeAuthCookie(){return this.removeItem(h(this.clientId))}async saveDeviceShare(t,a){await this.saveWalletUserId(a),await this.setItem(g(this.clientId,a),t)}async getDeviceShare(){const t=await this.getWalletUserId();return t?this.getItem(g(this.clientId,t)):null}async removeDeviceShare(){const t=await this.getWalletUserId();return t?this.removeItem(g(this.clientId,t)):!1}async getWalletUserId(){return this.getItem(u(this.clientId))}async saveWalletUserId(t){await this.setItem(u(this.clientId),t)}async removeWalletUserId(){return this.removeItem(u(this.clientId))}}function v(e){return Uint8Array.from(e,t=>t.charCodeAt(0)).buffer}function T(e){return String.fromCharCode(...new Uint8Array(e))}function S(e){return e.match(/^[a-zA-Z0-9\-_]+=*$/)!==null}function l(e){return btoa(T(e)).replaceAll("+","-").replaceAll("/","_")}function f(e){return e=e.replaceAll("-","+").replaceAll("_","/"),v(atob(e))}async function L(e){return await crypto.subtle.digest("SHA-256",e)}function E(){return!!window.PublicKeyCredential}async function _(){return await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable()}async function k(e){if(e==="local")return"platform";if(e==="roaming"||e==="extern")return"cross-platform";if(e!=="both")try{return await _()?"platform":"cross-platform"}catch{return}}function N(e){switch(e){case-7:return"ES256";case-257:return"RS256";default:throw new Error(`Unknown algorithm code: ${e}`)}}async function R(e,t,a){if(a=a??{},!S(t))throw new Error("Provided challenge is not properly encoded in Base64url");const s={challenge:f(t),rp:{id:a.domain??window.location.hostname,name:a.domain??window.location.hostname},user:{id:a.userHandle?v(a.userHandle):await L(new TextEncoder().encode("passwordless.id-user:"+e)),name:e,displayName:e},pubKeyCredParams:[{alg:-7,type:"public-key"},{alg:-257,type:"public-key"}],timeout:a.timeout??6e4,authenticatorSelection:{userVerification:a.userVerification??"required",authenticatorAttachment:await k(a.authenticatorType??"auto"),residentKey:a.discoverable??"preferred",requireResidentKey:a.discoverable==="required"},attestation:"direct"};a.debug&&console.debug(s);const i=await navigator.credentials.create({publicKey:s});a.debug&&console.debug(i);const r=i.response;let n={username:e,credential:{id:i.id,publicKey:l(r.getPublicKey()),algorithm:N(i.response.getPublicKeyAlgorithm())},authenticatorData:l(r.getAuthenticatorData()),clientData:l(r.clientDataJSON)};return a.attestation&&(n.attestationData=l(r.attestationObject)),n}async function W(e){const t=["internal"],a=["hybrid","usb","ble","nfc"];if(e==="local")return t;if(e=="roaming"||e==="extern")return a;if(e==="both")return[...t,...a];try{return await _()?t:a}catch{return[...t,...a]}}async function U(e,t,a){if(a=a??{},!S(t))throw new Error("Provided challenge is not properly encoded in Base64url");const s=await W(a.authenticatorType??"auto");let i={challenge:f(t),rpId:a.domain??window.location.hostname,allowCredentials:e.map(o=>({id:f(o),type:"public-key",transports:s})),userVerification:a.userVerification??"required",timeout:a.timeout??6e4};a.debug&&console.debug(i);let r=await navigator.credentials.get({publicKey:i,mediation:a.mediation});a.debug&&console.debug(r);const n=r.response;return{credentialId:r.id,authenticatorData:l(n.authenticatorData),clientData:l(n.clientDataJSON),signature:l(n.signature),userHandle:n.userHandle?l(n.userHandle):void 0}}new TextDecoder("utf-8");function C(){return`${p("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function D(e,t){return`${p("inAppWallet")}/api/2024-05-05/login/passkey?type=${e}${t?`&username=${t}`:""}`}async function H(e){if(!E())throw new Error("Passkeys are not available on this device");const t=new w({clientId:e.client.clientId}),a=b(e.client),s=e.username??$(),r=await(await a(D("sign-up",s))).json();if(!r.challenge)throw new Error("No challenge received");const n=r.challenge,c=await R(s,n,{authenticatorType:e.authenticatorType??"auto",userVerification:"required",attestation:!0,debug:!1});await t.savePasskeyCredentialId(c.credential.id);const d=await(await a(C(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"sign-up",authenticatorData:c.authenticatorData,credentialId:c.credential.id,serverVerificationId:r.serverVerificationId,clientData:c.clientData,username:s,credential:{publicKey:c.credential.publicKey,algorithm:c.credential.algorithm}})})).json();if(!d)throw new Error("No token received");return d}async function j(e){if(!E())throw new Error("Passkeys are not available on this device");const t=new w({clientId:e.client.clientId}),a=b(e.client),i=await(await a(D("sign-in"))).json();if(!i.challenge)throw new Error("No challenge received");const r=i.challenge,n=await t.getPasskeyCredentialId(),o=await U(n?[n]:[],r,{authenticatorType:e.authenticatorType??"auto",userVerification:"required"}),d=await a(C(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"sign-in",authenticatorData:o.authenticatorData,credentialId:o.credentialId,serverVerificationId:i.serverVerificationId,clientData:o.clientData,signature:o.signature})});await t.savePasskeyCredentialId(o.credentialId);const I=await d.json();if(!I)throw new Error("No token received");return I}async function B(e){return!!await new w({clientId:e.clientId}).getPasskeyCredentialId()}function $(){return`wallet-${new Date().toISOString()}`}export{V as I,w as L,B as h,j as l,H as r};
