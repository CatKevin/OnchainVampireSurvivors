import{_ as u,d}from"./index-be9e3908.js";let c;function f(){return c||(c=new TextDecoder),c}const l="[object Uint8Array]";function s(r){if(!y(r))throw new TypeError(`Expected \`Uint8Array\`, got \`${typeof r}\``)}function y(r){return r?r.constructor===Uint8Array?!0:Object.prototype.toString.call(r)===l:!1}function w(r){return s(r),f().decode(r)}function o(r){if(typeof r!="string")throw new TypeError(`Expected \`string\`, got \`${typeof r}\``)}function h(r){return r.replaceAll("-","+").replaceAll("_","/")}function T(r){return o(r),Uint8Array.from(globalThis.atob(h(r)),t=>t.codePointAt(0))}function p(r){return o(r),w(T(r))}function A(r){return!!r.startsWith("data:application/json;base64")}function U(r){const[,t]=r.split(",");return p(t)}async function k(r){const{client:t,tokenId:a,tokenUri:n}=r;if(A(n))try{return JSON.parse(U(n))}catch(e){throw console.error("Failed to fetch base64 encoded NFT",{tokenId:a,tokenUri:n},e),e}const{download:i}=await u(()=>import("./index-be9e3908.js").then(e=>e.ct),["assets/index-be9e3908.js","assets/index-db695948.css"]);try{if(!n.includes("{id}"))return await(await i({client:t,uri:n})).json()}catch(e){throw console.error("Failed to fetch non-dynamic NFT",{tokenId:a,tokenUri:n},e),e}try{try{return await(await i({client:t,uri:n.replace("{id}",d(a,{size:32}).slice(2))})).json()}catch{return await(await i({client:t,uri:n.replace("{id}",a.toString())})).json()}}catch(e){throw console.error("Failed to fetch dynamic NFT",{tokenId:a,tokenUri:n},e),e}}function m(r,t){switch(t.type){case"ERC721":return{metadata:r,owner:(t==null?void 0:t.owner)??null,id:t.tokenId,tokenURI:t.tokenUri,type:t.type};case"ERC1155":return{metadata:r,owner:(t==null?void 0:t.owner)??null,id:t.tokenId,tokenURI:t.tokenUri,type:t.type,supply:t.supply};default:throw new Error("Invalid NFT type")}}export{k as f,m as p};
